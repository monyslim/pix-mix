name: CI # this is the name of the workflow
on:
  push:
    branches:
      - master
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Greet User
        run: echo "Welcome"
      - name: "Build the Image"
        env: 
          image_name: test-image # Image name variable
          version: 1.0.0 # Image version variable
          username: monyslim
        run: |
          docker build -t $username/$image_name:$version .
      - name: Create app_version.txt
        run: |
          echo "Version: $version" > app_version.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3 # Updated to v3
        with:
          name: app_version # Change to a more generic name
          path: app_version.txt
      - name: "Logs into Docker Hub Account"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Push Docker Image to Docker Hub
        env: 
          image_name: test-image # Image name variable
          version: 1.0.0 # Image version variable
          username: monyslim
        run: |      
          docker push $username/$image_name:$version

  Deploy:
    name: Deploy Docker Image
    runs-on: self-hosted
    needs: Build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3 # Update to v3 for consistency
        with:
          name: app_version # Match the name used in upload step
          path: .
      - name: "Logs into Docker Hub Account"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Pull and Deploy Docker Image
        env: 
          image_name: test-image # Image name variable
          version: 1.0.0 # Image version variable
          username: monyslim
        run: |
          docker pull $username/$image_name:$version
          docker run -d -p 808:80 $username/$image_name:$version
